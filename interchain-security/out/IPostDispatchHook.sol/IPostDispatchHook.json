{"abi":[{"type":"function","name":"hookType","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"postDispatch","inputs":[{"name":"metadata","type":"bytes","internalType":"bytes"},{"name":"message","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"quoteDispatch","inputs":[{"name":"metadata","type":"bytes","internalType":"bytes"},{"name":"message","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"supportsMetadata","inputs":[{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"hookType()":"e445e7dd","postDispatch(bytes,bytes)":"086011b9","quoteDispatch(bytes,bytes)":"aaccd230","supportsMetadata(bytes)":"e5320bb9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hookType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"postDispatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"supportsMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"}},\"quoteDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"},\"returns\":{\"_0\":\"Quoted payment for the postDispatch call\"}},\"supportsMetadata(bytes)\":{\"params\":{\"metadata\":\"metadata\"},\"returns\":{\"_0\":\"Whether the hook supports metadata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hookType()\":{\"notice\":\"Returns an enum that represents the type of hook\"},\"postDispatch(bytes,bytes)\":{\"notice\":\"Post action after a message is dispatched via the Mailbox\"},\"quoteDispatch(bytes,bytes)\":{\"notice\":\"Compute the payment required by the postDispatch call\"},\"supportsMetadata(bytes)\":{\"notice\":\"Returns whether the hook supports metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/hyperlane-monorepo/solidity/contracts/interfaces/hooks/IPostDispatchHook.sol\":\"IPostDispatchHook\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@hyperlane/=lib/hyperlane-monorepo/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":hyperlane-monorepo/=lib/hyperlane-monorepo/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/hyperlane-monorepo/solidity/contracts/interfaces/hooks/IPostDispatchHook.sol\":{\"keccak256\":\"0xb5df1226b2e73559f2577ef168b5f402df05b7d2bf6bd1d30baf44439aea537b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b966259c91fbf77c0eb6cea7cebc4a0701cb0b1f195fd107f4a9b8a2cb04c1e0\",\"dweb:/ipfs/QmUtJxjUWuvwFkpmFxwciaT5L5FpQMkqUed6MQMLBzPEWs\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"hookType","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"},{"internalType":"bytes","name":"message","type":"bytes"}],"stateMutability":"payable","type":"function","name":"postDispatch"},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"},{"internalType":"bytes","name":"message","type":"bytes"}],"stateMutability":"view","type":"function","name":"quoteDispatch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"view","type":"function","name":"supportsMetadata","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"postDispatch(bytes,bytes)":{"params":{"message":"The message passed from the Mailbox.dispatch() call","metadata":"The metadata required for the hook"}},"quoteDispatch(bytes,bytes)":{"params":{"message":"The message passed from the Mailbox.dispatch() call","metadata":"The metadata required for the hook"},"returns":{"_0":"Quoted payment for the postDispatch call"}},"supportsMetadata(bytes)":{"params":{"metadata":"metadata"},"returns":{"_0":"Whether the hook supports metadata"}}},"version":1},"userdoc":{"kind":"user","methods":{"hookType()":{"notice":"Returns an enum that represents the type of hook"},"postDispatch(bytes,bytes)":{"notice":"Post action after a message is dispatched via the Mailbox"},"quoteDispatch(bytes,bytes)":{"notice":"Compute the payment required by the postDispatch call"},"supportsMetadata(bytes)":{"notice":"Returns whether the hook supports metadata"}},"version":1}},"settings":{"remappings":["@hyperlane/=lib/hyperlane-monorepo/solidity/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","hyperlane-monorepo/=lib/hyperlane-monorepo/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/hyperlane-monorepo/solidity/contracts/interfaces/hooks/IPostDispatchHook.sol":"IPostDispatchHook"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/hyperlane-monorepo/solidity/contracts/interfaces/hooks/IPostDispatchHook.sol":{"keccak256":"0xb5df1226b2e73559f2577ef168b5f402df05b7d2bf6bd1d30baf44439aea537b","urls":["bzz-raw://b966259c91fbf77c0eb6cea7cebc4a0701cb0b1f195fd107f4a9b8a2cb04c1e0","dweb:/ipfs/QmUtJxjUWuvwFkpmFxwciaT5L5FpQMkqUed6MQMLBzPEWs"],"license":"MIT OR Apache-2.0"}},"version":1},"id":20}